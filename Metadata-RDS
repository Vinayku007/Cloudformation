 # this is version 2 template #

AWSTemplateFormatVersion: 2010-09-09
Description: Creating cloudformation template step by step

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Database configuration
        Parameters:
          - DbClass
          - MultiAZ
          - AllocatedStorage
          - MasterUserName
          - MasterUserPassword
      - Label:
          default: Networking Setting Configuration
        Parameters:
          - VpcId
          - DbSubnets
          - SecurityGroupPorts
    ParameterLabels:
      DbClass:
        default: Database instance Class
      AllocatedStorage:
        default: Allocated Storage Size

Parameters:
  DbClass:
    Description: Config-Instance-class
    Type: String
    Default: db.t4g.micro
    AllowedValues:
      - db.t4g.micro
      - db.t3.micro
  MasterUserName:
    Description: User Name For the Db Instance
    Type: String
    Default: Vinaykumar143
    MinLength: 13
    AllowedPattern: '[A-Z0-9][a-zA-Z0-9]*'
    NoEcho: true
  MasterUserPassword:
    Description: Password for the Rds Instance
    Type: String
    MaxLength: 15
    Default: 1234567891011
    NoEcho: true
  MultiAZ:
    Description: true or false
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  AllocatedStorage:
    Description: Storage capacity for the Rds Instance
    Type: Number
    MinValue: 20
    MaxValue: 25
    Default: 20
    ConstraintDescription: AllocatedStorage cannot be less than 20 or greater than 25.
  SecurityGroupPorts:
    Type: List<Number>
    Description: port no as a list:<Web-server-instance>,<Database-port>
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: A valid VPC id in your AWS Account.

Resources:
  WebServerSecurityGroupForRdsInstance:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Creating security group for instance.
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Select
            - 0
            - !Ref SecurityGroupPorts
          ToPort: !Select
            - 0
            - !Ref SecurityGroupPorts
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Security Group for RDS Instance

  SecurityGroupForRdsInstance:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Creating security group port no 3306 for RDS instance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Select
            - 1
            - !Ref SecurityGroupPorts
          ToPort: !Select
            - 1
            - !Ref SecurityGroupPorts
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Security Group for RDS Instance

  SubnetGroupforRdsInstance:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Creating subnets for RDS instance
      SubnetIds:
        - subnet-0dc85567179668bc1
        - subnet-009ecd790cd9c99d8
        - subnet-03220b943c7743f3b
      Tags:
        - Key: Name
          Value: Subnet For RDS Instance

  RdsInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: !Ref AllocatedStorage
      DBInstanceClass: !Ref DbClass
      BackupRetentionPeriod: 0
      DBSubnetGroupName: !Ref SubnetGroupforRdsInstance
      Engine: mysql
      MasterUsername: !Ref MasterUserName
      MasterUserPassword: !Ref MasterUserPassword
      MultiAZ: !Ref MultiAZ
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !Ref SecurityGroupForRdsInstance





















































AWSTemplateFormatVersion: 2010-09-09
Description: Creating cloudformation template step by step

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Database configuration"
        Parameters:
          - DbClass
          - MultiAZ
          - AllocatedStorage
          - MasterUserName
          - MasterUserPassword
      - Label:
          default: "Networking Setting Configuration"
        Parameters:
          - VpcId
          - DbSubnets
          - SecurityGroupPorts
    ParameterLabels:
      DbClass:
        default: "Database instance Class"
      AllocatedStorage:
        default: "Allocated Storage Size"

Parameters:
  DbClass:
    Description: Config-Instance-class
    Type: String
    Default: db.t4g.micro
    AllowedValues:
      - db.t4g.micro
      - db.t3.micro
  MasterUserName:
    Description: User Name For the Db Instance
    Type: String
    Default: Vinaykumar143
    MinLength: 13
    AllowedPattern: '[A-Z0-9][a-zA-Z0-9]*'
    NoEcho: True
  MasterUserPassword:
    Description: Password for the Rds Instance
    Type: String
    MaxLength: 15
    Default: 1234567891011
    NoEcho: True
  MultiAZ:
    Description: true or false
    Type: String
    Default: false
    AllowedValues: 
      - true
      - false
  AllocatedStorage:
    Description: Storage capacity for the Rds Instance
    Type: Number
    MinValue: 20
    MaxValue: 25
    Default: 20
    ConstraintDescription: AllocatedStorage cannot be less than 20 or greater than 25.
  SecurityGroupPorts:
    Type: List<Number>
    Description: 'port no as a list:<Web-server-instance>,<Database-port>'

Resources:
  WebServerSecurityGroupForRdsInstance:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Creating security group for instance.
      VpcId: vpc-0527f7fd92eccc30c
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Select [0, !Ref SecurityGroupPorts]
          ToPort: !Select [0, !Ref SecurityGroupPorts]
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Security Group for RDS Instance

  SecurityGroupForRdsInstance:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Creating security group port no 3306 for RDS instance
      VpcId: vpc-0527f7fd92eccc30c
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Select [1, !Ref SecurityGroupPorts]
          ToPort: !Select [1, !Ref SecurityGroupPorts]
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Security Group for RDS Instance

  SubnetGroupforRdsInstance:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Creating subnets for RDS instance
      SubnetIds: 
        - subnet-02f0290fa659ea33d
        - subnet-060b33fcc8eb408a0
        - subnet-0a5e06ed2c4395aa6
      Tags:
        - Key: Name
          Value: Subnet For RDS Instance

  RdsInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: !Ref AllocatedStorage
      DBInstanceClass: !Ref DbClass
      BackupRetentionPeriod: 0
      DBSubnetGroupName: !Ref SubnetGroupforRdsInstance
      Engine: mysql
      MasterUsername: !Ref MasterUserName
      MasterUserPassword: !Ref MasterUserPassword
      MultiAZ: !Ref MultiAZ
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !Ref SecurityGroupForRdsInstance
